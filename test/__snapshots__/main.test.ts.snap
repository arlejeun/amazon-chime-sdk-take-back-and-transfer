// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Mappings": {
    "ServerInstanceAmiMap3262B564": {
      "us-east-1": {
        "ami": {
          "Ref": "SsmParameterValueawsservicecanonicalubuntuserverjammystablecurrentarm64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
    },
  },
  "Outputs": {
    "DistributionURL": {
      "Value": {
        "Fn::GetAtt": [
          "DistributionResourcesDistribution80C53434",
          "DomainName",
        ],
      },
    },
    "EntryNumber": {
      "Value": {
        "Fn::GetAtt": [
          "voiceResourcessmaPSTNPhoneNumberChimePhoneNumberpstnCustomResource7CF83AAB",
          "phoneNumber",
        ],
      },
    },
    "sshCommand": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "ssh ubuntu@",
            {
              "Ref": "VPCResourcesasteriskEipC341F971",
            },
          ],
        ],
      },
    },
    "ssmCommand": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ssm start-session --target ",
            {
              "Ref": "ServerInstanceE518391B87a217eae52e3c5b",
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsservicecanonicalubuntuserverjammystablecurrentarm64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/canonical/ubuntu/server/jammy/stable/current/arm64/hvm/ebs-gp2/ami-id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "17c16a3854838fd3ff4bda08146122a6701f33b9c86ae17f415ad0dc47a97544.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchResourcesDashboard41221379": {
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{"widgets":[{"type":"log","width":24,"height":6,"x":0,"y":0,"properties":{"view":"table","title":"AmazonChimeSDKConnectIntegration","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","query":"SOURCE '",
              {
                "Fn::GetAtt": [
                  "voiceResourcessmaHandlerLogRetention01A9B963",
                  "LogGroupName",
                ],
              },
              "' | SOURCE '",
              {
                "Fn::GetAtt": [
                  "LambdaResourcesconnectLambdaLogRetention9CB1BCAE",
                  "LogGroupName",
                ],
              },
              "' | fields @message\\n| sort @timestamp desc\\n| limit 400"}}]}",
            ],
          ],
        },
        "DashboardName": "AmazonChimeSDKConnectIntegration",
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "CognitoCognitoDefaultAuthenticatedRole162BCBED": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "CognitocognitoIdentityPool626065C7",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CognitoCognitoDefaultAuthenticatedRoleDefaultPolicyE55F5536": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
                "cognito-identity:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CognitoCognitoDefaultAuthenticatedRoleDefaultPolicyE55F5536",
        "Roles": [
          {
            "Ref": "CognitoCognitoDefaultAuthenticatedRole162BCBED",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CognitoCognitoDefaultUnauthenticatedRole7E1472DA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "CognitocognitoIdentityPool626065C7",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CognitoCognitoDefaultUnauthenticatedRoleDefaultPolicyC106F210": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CognitoCognitoDefaultUnauthenticatedRoleDefaultPolicyC106F210",
        "Roles": [
          {
            "Ref": "CognitoCognitoDefaultUnauthenticatedRole7E1472DA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CognitoDefaultValid0F579DDB": {
      "Properties": {
        "IdentityPoolId": {
          "Ref": "CognitocognitoIdentityPool626065C7",
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "CognitoCognitoDefaultAuthenticatedRole162BCBED",
              "Arn",
            ],
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "CognitoCognitoDefaultUnauthenticatedRole7E1472DA",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "CognitoUserPool279BBD48": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_email",
              "Priority": 1,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false,
          "InviteMessageTemplate": {
            "EmailMessage": "Your Amazon Chime SDK SIP Trunking Demo username is {username} and temporary password is {####}",
            "EmailSubject": "Your Amazon Chime SDK SIP Trunking Demo temporary password",
          },
        },
        "AutoVerifiedAttributes": [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new Amazon Chime SDK SIP Trunking Demo account is {####}",
        "EmailVerificationSubject": "Verify your new Amazon Chime SDK SIP Trunking Demo account",
        "EnabledMfas": [
          "SMS_MFA",
          "SOFTWARE_TOKEN_MFA",
        ],
        "LambdaConfig": {
          "PreSignUp": {
            "Fn::GetAtt": [
              "CognitodomainValidatorC88C5FF9",
              "Arn",
            ],
          },
        },
        "MfaConfiguration": "OPTIONAL",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
          },
        },
        "Schema": [
          {
            "Mutable": true,
            "Name": "email",
            "Required": true,
          },
        ],
        "SmsConfiguration": {
          "ExternalId": "testCognitoUserPoolA55211EF",
          "SnsCallerArn": {
            "Fn::GetAtt": [
              "CognitoUserPoolsmsRole738960F0",
              "Arn",
            ],
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserAttributeUpdateSettings": {
          "AttributesRequireVerificationBeforeUpdate": [
            "email",
          ],
        },
        "UserPoolAddOns": {
          "AdvancedSecurityMode": "ENFORCED",
        },
        "UserPoolName": "test-UserPool",
        "UsernameAttributes": [
          "email",
        ],
        "UsernameConfiguration": {
          "CaseSensitive": false,
        },
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new Amazon Chime SDK SIP Trunking Demo account is {####}",
          "EmailSubject": "Verify your new Amazon Chime SDK SIP Trunking Demo account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "CognitoUserPoolClientEF2538C4": {
      "Properties": {
        "AllowedOAuthFlows": [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "https://example.com",
        ],
        "ClientName": "test-UserPool",
        "ExplicitAuthFlows": [
          "ALLOW_CUSTOM_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": false,
        "RefreshTokenValidity": 60,
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "TokenValidityUnits": {
          "RefreshToken": "minutes",
        },
        "UserPoolId": {
          "Ref": "CognitoUserPool279BBD48",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "CognitoUserPoolPreSignUpCognitoD07EA58F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CognitodomainValidatorC88C5FF9",
            "Arn",
          ],
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CognitoUserPool279BBD48",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CognitoUserPoolsmsRole738960F0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "testCognitoUserPoolA55211EF",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cognito-idp.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sns:Publish",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "sns-publish",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CognitocognitoIdentityPool626065C7": {
      "Properties": {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": {
              "Ref": "CognitoUserPoolClientEF2538C4",
            },
            "ProviderName": {
              "Fn::GetAtt": [
                "CognitoUserPool279BBD48",
                "ProviderName",
              ],
            },
          },
        ],
        "IdentityPoolName": "test-IdentityPool",
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "CognitodomainValidatorC88C5FF9": {
      "DependsOn": [
        "CognitodomainValidatorServiceRole1B8A3BD4",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "6761c75a96d6c73bc6be82736ad6d457eac946127f04d8adb09df562299ea8cc.zip",
        },
        "Environment": {
          "Variables": {
            "ALLOWED_DOMAIN": " ",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CognitodomainValidatorServiceRole1B8A3BD4",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CognitodomainValidatorServiceRole1B8A3BD4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ConnectContactFlowResourcesConnectCustomResourceA5169D57": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventADDB5A65",
            "Arn",
          ],
        },
        "contactFlowId": {
          "Ref": "ConnectContactFlowResourcescontactFlow2D84F5E6",
        },
        "instanceId": {
          "Fn::GetAtt": [
            "ConnectInstanceResourcesInstance5B0E277B",
            "Id",
          ],
        },
        "phoneNumbers": [
          {
            "Fn::GetAtt": [
              "newConnectNumbersconnectPhoneNumber098AC4A61",
              "Address",
            ],
          },
          {
            "Fn::GetAtt": [
              "newConnectNumbersconnectPhoneNumber1CA4337F4",
              "Address",
            ],
          },
          {
            "Fn::GetAtt": [
              "newConnectNumbersconnectPhoneNumber23831CF9C",
              "Address",
            ],
          },
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventADDB5A65": {
      "DependsOn": [
        "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy6BFCE7C2",
        "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventServiceRoleEC02EDBA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test/ConnectContactFlowResources/ConnectCustomResourceProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "ConnectContactFlowResourcesassociateNumberCustomResourceLambdaA26AAB47",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventServiceRoleEC02EDBA",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventLogRetention71F6045E": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventADDB5A65",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy6BFCE7C2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ConnectContactFlowResourcesassociateNumberCustomResourceLambdaA26AAB47",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ConnectContactFlowResourcesassociateNumberCustomResourceLambdaA26AAB47",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy6BFCE7C2",
        "Roles": [
          {
            "Ref": "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventServiceRoleEC02EDBA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ConnectContactFlowResourcesConnectCustomResourceProviderframeworkonEventServiceRoleEC02EDBA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ConnectContactFlowResourcesassociateNumberCustomResourceLambdaA26AAB47": {
      "DependsOn": [
        "ConnectContactFlowResourcesassociateNumberCustomResourceRole8D930A19",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "ea67dcafac7a9e7070c6adcec40281ca7813e2b65c6b774d1ee1c425e8fb7144.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ConnectContactFlowResourcesassociateNumberCustomResourceRole8D930A19",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ConnectContactFlowResourcesassociateNumberCustomResourceRole8D930A19": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "connect:ListPhoneNumbersV2",
                    "connect:AssociatePhoneNumberContactFlow",
                    "connect:DisassociatePhoneNumberContactFlow",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "connectPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ConnectContactFlowResourcescontactFlow2D84F5E6": {
      "Properties": {
        "Content": {
          "Fn::Join": [
            "",
            [
              "{"Version":"2019-10-30","StartAction":"93b3c694-3f9a-46f9-b53d-1fa4187f4d03","Metadata":{"entryPointPosition":{"x":40,"y":40},"ActionMetadata":{"93b3c694-3f9a-46f9-b53d-1fa4187f4d03":{"position":{"x":162.4,"y":101.6}},"03a772b9-711c-4063-b71f-108b030e5174":{"position":{"x":399.2,"y":100}},"GetData":{"position":{"x":640.8,"y":101.6},"isFriendlyName":true,"parameters":{"LambdaFunctionARN":{"displayName":"",
              {
                "Fn::GetAtt": [
                  "LambdaResourcesconnectLambda66D93256",
                  "Arn",
                ],
              },
              ""}},"dynamicMetadata":{"Purpose":false}},"d87f251a-2ac4-4204-8d85-c5c684c820a1":{"position":{"x":880,"y":99.2},"parameters":{"Attributes":{"OriginalCallingNumber":{"useDynamic":true}}},"dynamicParams":["OriginalCallingNumber"]},"PlayOriginalCallingNumber":{"position":{"x":1120.8,"y":100},"isFriendlyName":true},"TransferCall":{"position":{"x":1361.6,"y":98.4},"isFriendlyName":true,"parameters":{"LambdaFunctionARN":{"displayName":"",
              {
                "Fn::GetAtt": [
                  "LambdaResourcesconnectLambda66D93256",
                  "Arn",
                ],
              },
              ""},"LambdaInvocationAttributes":{"CalledNumber":{"useDynamic":true},"CallingNumber":{"useDynamic":true}}},"dynamicMetadata":{"CalledNumber":true,"CallingNumber":true,"Purpose":false}},"90c241fa-4bd0-4def-84ce-9163792ae0b0":{"position":{"x":1840.8,"y":359.2}}},"Annotations":[],"name":"TakeBackAndTransferDemo","description":"","type":"contactFlow","status":"saved","hash":{}},"Actions":[{"Parameters":{"FlowLoggingBehavior":"Enabled"},"Identifier":"93b3c694-3f9a-46f9-b53d-1fa4187f4d03","Type":"UpdateFlowLoggingBehavior","Transitions":{"NextAction":"03a772b9-711c-4063-b71f-108b030e5174"}},{"Parameters":{"Text":"Thank you for calling a Connect number through Amazon Chime SDK."},"Identifier":"03a772b9-711c-4063-b71f-108b030e5174","Type":"MessageParticipant","Transitions":{"NextAction":"GetData","Errors":[{"NextAction":"90c241fa-4bd0-4def-84ce-9163792ae0b0","ErrorType":"NoMatchingError"}]}},{"Parameters":{"LambdaFunctionARN":"",
              {
                "Fn::GetAtt": [
                  "LambdaResourcesconnectLambda66D93256",
                  "Arn",
                ],
              },
              "","InvocationTimeLimitSeconds":"3","LambdaInvocationAttributes":{"CalledNumber":"$.SystemEndpoint.Address","CallingNumber":"$.CustomerEndpoint.Address","Purpose":"GetData"},"ResponseValidation":{"ResponseType":"JSON"}},"Identifier":"GetData","Type":"InvokeLambdaFunction","Transitions":{"NextAction":"d87f251a-2ac4-4204-8d85-c5c684c820a1","Errors":[{"NextAction":"90c241fa-4bd0-4def-84ce-9163792ae0b0","ErrorType":"NoMatchingError"}]}},{"Parameters":{"Attributes":{"OriginalCallingNumber":"$.External.original_calling_number"},"TargetContact":"Current"},"Identifier":"d87f251a-2ac4-4204-8d85-c5c684c820a1","Type":"UpdateContactAttributes","Transitions":{"NextAction":"PlayOriginalCallingNumber","Errors":[{"NextAction":"90c241fa-4bd0-4def-84ce-9163792ae0b0","ErrorType":"NoMatchingError"}]}},{"Parameters":{"SSML":"Your original calling number is <say-as interpret-as='telephone'>$.Attributes.OriginalCallingNumber</say-as>"},"Identifier":"PlayOriginalCallingNumber","Type":"MessageParticipant","Transitions":{"NextAction":"TransferCall","Errors":[{"NextAction":"90c241fa-4bd0-4def-84ce-9163792ae0b0","ErrorType":"NoMatchingError"}]}},{"Parameters":{"LambdaFunctionARN":"",
              {
                "Fn::GetAtt": [
                  "LambdaResourcesconnectLambda66D93256",
                  "Arn",
                ],
              },
              "","InvocationTimeLimitSeconds":"3","LambdaInvocationAttributes":{"CalledNumber":"$.SystemEndpoint.Address","CallingNumber":"$.CustomerEndpoint.Address","Purpose":"TransferCall"},"ResponseValidation":{"ResponseType":"JSON"}},"Identifier":"TransferCall","Type":"InvokeLambdaFunction","Transitions":{"NextAction":"90c241fa-4bd0-4def-84ce-9163792ae0b0","Errors":[{"NextAction":"90c241fa-4bd0-4def-84ce-9163792ae0b0","ErrorType":"NoMatchingError"}]}},{"Parameters":{},"Identifier":"90c241fa-4bd0-4def-84ce-9163792ae0b0","Type":"DisconnectParticipant","Transitions":{}}]}",
            ],
          ],
        },
        "InstanceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:connect:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":instance/",
              {
                "Fn::GetAtt": [
                  "ConnectInstanceResourcesInstance5B0E277B",
                  "Id",
                ],
              },
            ],
          ],
        },
        "Name": "TakeBackAndTransferDemo",
        "Type": "CONTACT_FLOW",
      },
      "Type": "AWS::Connect::ContactFlow",
    },
    "ConnectContactFlowResourceslambdaIntegrationC9F73B2E": {
      "Properties": {
        "InstanceId": {
          "Fn::Join": [
            "",
            [
              "arn:aws:connect:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":instance/",
              {
                "Fn::GetAtt": [
                  "ConnectInstanceResourcesInstance5B0E277B",
                  "Id",
                ],
              },
            ],
          ],
        },
        "IntegrationArn": {
          "Fn::GetAtt": [
            "LambdaResourcesconnectLambda66D93256",
            "Arn",
          ],
        },
        "IntegrationType": "LAMBDA_FUNCTION",
      },
      "Type": "AWS::Connect::IntegrationAssociation",
    },
    "ConnectInstanceResourcesInstance5B0E277B": {
      "Properties": {
        "Attributes": {
          "AutoResolveBestVoices": true,
          "ContactLens": false,
          "ContactflowLogs": false,
          "EarlyMedia": false,
          "InboundCalls": true,
          "OutboundCalls": false,
          "UseCustomTTSVoices": false,
        },
        "IdentityManagementType": "CONNECT_MANAGED",
        "InstanceAlias": {
          "Fn::Join": [
            "",
            [
              "take-back-and-transfer-",
              {
                "Ref": "AWS::AccountId",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Connect::Instance",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB6723FB92": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleDefaultPolicy96C3E726",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleBA21DBC1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "ServerassetBucketDeploymentAwsCliLayer51A9B05F",
          },
        ],
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleBA21DBC1",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleBA21DBC1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleDefaultPolicy96C3E726": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ServerassetBucketD78D47DA",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ServerassetBucketD78D47DA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleDefaultPolicy96C3E726",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleBA21DBC1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D": {
      "DependsOn": [
        "CustomPSTNResourcesCustomResourceProviderRole536C0E76",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "4e1c22bfc3a8c9768d5a168814ab721614b22249283525e4b079d7b923a0442b.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomPSTNResourcesCustomResourceProviderRole536C0E76",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomPSTNResourcesCustomResourceProviderRole536C0E76": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "chime:CreatePhoneNumberOrder",
                    "chime:CreateSipMediaApplication",
                    "chime:CreateSipRule",
                    "chime:CreateVoiceConnector",
                    "chime:CreateVoiceProfileDomain",
                    "chime:DeletePhoneNumber",
                    "chime:DeleteSipMediaApplication",
                    "chime:DeleteSipRule",
                    "chime:DeleteVoiceConnector",
                    "chime:DeleteVoiceProfileDomain",
                    "chime:GetPhoneNumber",
                    "chime:GetPhoneNumberOrder",
                    "chime:GetSipRule",
                    "chime:ListPhoneNumbers",
                    "chime:PutSipMediaApplicationLoggingConfiguration",
                    "chime:PutVoiceConnectorLoggingConfiguration",
                    "chime:PutVoiceConnectorOrigination",
                    "chime:PutVoiceConnectorStreamingConfiguration",
                    "chime:PutVoiceConnectorTermination",
                    "chime:*MediaInsightsPipelineConfiguration",
                    "chime:SearchAvailablePhoneNumbers",
                    "chime:UpdateSipRule",
                    "chime:AssociatePhoneNumbersWithVoiceConnector",
                    "chime:DisassociatePhoneNumbersFromVoiceConnector",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:DescribeLogGroups",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:ListLogDeliveries",
                    "logs:CreateLogDelivery",
                    "logs:GetLogDelivery",
                    "logs:DeleteLogDelivery",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "iam:CreateServiceLinkedRole",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "lambda:GetPolicy",
                    "lambda:AddPermission",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ssm:*Parameter*",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:ssm:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":parameter/chime/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "ServerassetBucketD78D47DA",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseInitializationinitTableCustomResourcePolicy3E4FAE04": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:BatchWriteItem",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatabaseInitializationinitTableCustomResourcePolicy3E4FAE04",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DatabaseInitializationinitTableFB494905": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DatabaseInitializationinitTableCustomResourcePolicy3E4FAE04",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"DynamoDB","action":"batchWriteItem","parameters":{"RequestItems":{"",
              {
                "Ref": "DatabaseResourcesintegrationTableAB8F2C7D",
              },
              "":[{"PutRequest":{"Item":{"sma_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "voiceResourcessmaPhoneNumber0ChimePhoneNumberpstnCustomResourceE4F69902",
                  "phoneNumber",
                ],
              },
              ""},"connect_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "newConnectNumbersconnectPhoneNumber098AC4A61",
                  "Address",
                ],
              },
              ""},"in_use":{"S":"false"}}}},{"PutRequest":{"Item":{"sma_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "voiceResourcessmaPhoneNumber0ChimePhoneNumberpstnCustomResourceE4F69902",
                  "phoneNumber",
                ],
              },
              ""},"connect_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "newConnectNumbersconnectPhoneNumber1CA4337F4",
                  "Address",
                ],
              },
              ""},"in_use":{"S":"false"}}}},{"PutRequest":{"Item":{"sma_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "voiceResourcessmaPhoneNumber0ChimePhoneNumberpstnCustomResourceE4F69902",
                  "phoneNumber",
                ],
              },
              ""},"connect_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "newConnectNumbersconnectPhoneNumber23831CF9C",
                  "Address",
                ],
              },
              ""},"in_use":{"S":"false"}}}},{"PutRequest":{"Item":{"sma_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "voiceResourcessmaPhoneNumber1ChimePhoneNumberpstnCustomResource78D9DEE1",
                  "phoneNumber",
                ],
              },
              ""},"connect_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "newConnectNumbersconnectPhoneNumber098AC4A61",
                  "Address",
                ],
              },
              ""},"in_use":{"S":"false"}}}},{"PutRequest":{"Item":{"sma_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "voiceResourcessmaPhoneNumber1ChimePhoneNumberpstnCustomResource78D9DEE1",
                  "phoneNumber",
                ],
              },
              ""},"connect_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "newConnectNumbersconnectPhoneNumber1CA4337F4",
                  "Address",
                ],
              },
              ""},"in_use":{"S":"false"}}}},{"PutRequest":{"Item":{"sma_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "voiceResourcessmaPhoneNumber1ChimePhoneNumberpstnCustomResource78D9DEE1",
                  "phoneNumber",
                ],
              },
              ""},"connect_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "newConnectNumbersconnectPhoneNumber23831CF9C",
                  "Address",
                ],
              },
              ""},"in_use":{"S":"false"}}}},{"PutRequest":{"Item":{"sma_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "voiceResourcessmaPhoneNumber2ChimePhoneNumberpstnCustomResourceBAF8216C",
                  "phoneNumber",
                ],
              },
              ""},"connect_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "newConnectNumbersconnectPhoneNumber098AC4A61",
                  "Address",
                ],
              },
              ""},"in_use":{"S":"false"}}}},{"PutRequest":{"Item":{"sma_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "voiceResourcessmaPhoneNumber2ChimePhoneNumberpstnCustomResourceBAF8216C",
                  "phoneNumber",
                ],
              },
              ""},"connect_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "newConnectNumbersconnectPhoneNumber1CA4337F4",
                  "Address",
                ],
              },
              ""},"in_use":{"S":"false"}}}},{"PutRequest":{"Item":{"sma_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "voiceResourcessmaPhoneNumber2ChimePhoneNumberpstnCustomResourceBAF8216C",
                  "phoneNumber",
                ],
              },
              ""},"connect_number":{"S":"",
              {
                "Fn::GetAtt": [
                  "newConnectNumbersconnectPhoneNumber23831CF9C",
                  "Address",
                ],
              },
              ""},"in_use":{"S":"false"}}}}]}},"physicalResourceId":{"id":"",
              {
                "Ref": "DatabaseResourcesintegrationTableAB8F2C7D",
              },
              "_initialization"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseResourcesintegrationTableAB8F2C7D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "sma_number",
            "AttributeType": "S",
          },
          {
            "AttributeName": "connect_number",
            "AttributeType": "S",
          },
          {
            "AttributeName": "in_use",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "in_use",
            "KeySchema": [
              {
                "AttributeName": "in_use",
                "KeyType": "HASH",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "sma_number",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "connect_number",
            "KeyType": "RANGE",
          },
        ],
        "SSESpecification": {
          "SSEEnabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "DistributionResourcesDistribution80C53434": {
      "Properties": {
        "DistributionConfig": {
          "CacheBehaviors": [
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "OriginRequestPolicyId": {
                "Ref": "DistributionResourcesremoveCookiesPolicyC3AC0485",
              },
              "PathPattern": "/ws",
              "TargetOriginId": "testDistributionResourcesDistributionOrigin255B4D0DE",
              "ViewerProtocolPolicy": "https-only",
            },
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
            "TargetOriginId": "testDistributionResourcesDistributionOrigin1AB07B588",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "CustomOriginConfig": {
                "HTTPPort": 80,
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": {
                "Fn::GetAtt": [
                  "VPCResourcesApplicationLoadBalancer8B897D2E",
                  "DNSName",
                ],
              },
              "Id": "testDistributionResourcesDistributionOrigin1AB07B588",
            },
            {
              "CustomOriginConfig": {
                "HTTPPort": 8088,
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": {
                "Fn::GetAtt": [
                  "VPCResourcesApplicationLoadBalancer8B897D2E",
                  "DNSName",
                ],
              },
              "Id": "testDistributionResourcesDistributionOrigin255B4D0DE",
            },
          ],
          "PriceClass": "PriceClass_100",
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "DistributionResourcesremoveCookiesPolicyC3AC0485": {
      "Properties": {
        "OriginRequestPolicyConfig": {
          "CookiesConfig": {
            "CookieBehavior": "none",
          },
          "HeadersConfig": {
            "HeaderBehavior": "allExcept",
            "Headers": [
              "Cookie",
            ],
          },
          "Name": "RemoveCookies-test",
          "QueryStringsConfig": {
            "QueryStringBehavior": "none",
          },
        },
      },
      "Type": "AWS::CloudFront::OriginRequestPolicy",
    },
    "LambdaResourcesconnectLambda66D93256": {
      "DependsOn": [
        "LambdaResourcesconnectLambdaRoleDefaultPolicy512C297F",
        "LambdaResourcesconnectLambdaRole0DB6C79D",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e864005f02edcec991530ccce7c3f45882d82a97653ea6da2c428f7e55c8804d.zip",
        },
        "Environment": {
          "Variables": {
            "INTEGRATION_TABLE": {
              "Ref": "DatabaseResourcesintegrationTableAB8F2C7D",
            },
            "LOG_LEVEL": "INFO",
            "SIP_MEDIA_APPLICATION_ID": {
              "Fn::GetAtt": [
                "voiceResourcessipMediaAppsipMediaAppRequestpstnCustomResourceA2CEE1C9",
                "sipMediaAppId",
              ],
            },
            "VOICE_CONNECTOR_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:chime:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":vc/",
                  {
                    "Fn::GetAtt": [
                      "voiceResourcespstnVoiceConnectorvoiceConnectorRequestpstnCustomResource7181BF13",
                      "voiceConnectorId",
                    ],
                  },
                ],
              ],
            },
            "VOICE_CONNECTOR_PHONE_NUMBER": {
              "Fn::GetAtt": [
                "voiceResourcesvoiceConnectorPhoneNumberChimePhoneNumberpstnCustomResource3F78630F",
                "phoneNumber",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaResourcesconnectLambdaRole0DB6C79D",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaResourcesconnectLambdaLogRetention9CB1BCAE": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "LambdaResourcesconnectLambda66D93256",
              },
            ],
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "LambdaResourcesconnectLambdaRole0DB6C79D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "chime:UpdateSipMediaApplicationCall",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "chimePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaResourcesconnectLambdaRoleDefaultPolicy512C297F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseResourcesintegrationTableAB8F2C7D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseResourcesintegrationTableAB8F2C7D",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaResourcesconnectLambdaRoleDefaultPolicy512C297F",
        "Roles": [
          {
            "Ref": "LambdaResourcesconnectLambdaRole0DB6C79D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerEIPAssociationA690C099": {
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCResourcesasteriskEipC341F971",
            "AllocationId",
          ],
        },
        "InstanceId": {
          "Ref": "ServerInstanceE518391B87a217eae52e3c5b",
        },
      },
      "Type": "AWS::EC2::EIPAssociation",
    },
    "ServerInstanceE518391B87a217eae52e3c5b": {
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT10M",
        },
      },
      "DependsOn": [
        "ServerserverEc2RoleDefaultPolicy2995B49A",
        "ServerserverEc2RoleAA905608",
      ],
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "cli": {
            "commands": {
              "000": {
                "command": "curl "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o "awscliv2.zip"",
              },
              "001": {
                "command": "unzip -q awscliv2.zip",
              },
              "002": {
                "command": "./aws/install",
              },
              "003": {
                "command": "echo AWS CLI installed",
              },
            },
          },
          "config": {
            "commands": {
              "000": {
                "command": "corepack enable",
              },
              "001": {
                "command": "chmod +x /etc/config_asterisk.sh",
              },
              "002": {
                "command": "/etc/config_asterisk.sh",
              },
            },
            "files": {
              "/etc/asterisk/asterisk.conf": {
                "content": "[options]
runuser = asterisk
rungroup = asterisk",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/extensions.conf": {
                "content": "; extensions.conf - the Asterisk dial plan
[general]
static=yes
writeprotect=no
clearglobalvars=no

[from-voiceConnector]
include => inbound_phone

[from-phone]
include => outbound_phone

[outbound_phone]
exten => _+X.,1,NoOP(Outbound Normal)
same => n,Dial(PJSIP/\\\${EXTEN}@PSTNVoiceConnector,20)
same => n,Congestion

[inbound_phone]
exten => _+X.,1,NoOP(Inbound Call)
same => n,Answer()
same => n,Wait(1)

same => n,Verbose(Get device status \${DEVICE_STATE(PJSIP/agent)})
same => n,GotoIf($[\${DEVICE_STATE(PJSIP/PHONE_NUMBER)}=UNAVAILABLE]?playAudio:callPhone)

same => n(callPhone),NoOp(callPhone)
same => n,Dial(PJSIP/PHONE_NUMBER)
same => n,Hangup()

same => n(playAudio),NoOp(playAudio)
same => n,Playback(/var/lib/asterisk/sounds/en/AGENT_Retail40)
same => n,Hangup()
",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/http.conf": {
                "content": "[general]
enabled=yes
bindaddr=0.0.0.0
bindport=8088
",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/logger.conf": {
                "content": "[general]
[logfiles]
console = verbose,notice,warning,error
messages = notice,warning,error",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/modules.conf": {
                "content": "[modules]
autoload = no

load = app_bridgewait.so
load = app_dial.so
load = app_playback.so
load = app_stack.so
load = app_verbose.so
load = app_voicemail.so
load = app_directory.so
load = app_confbridge.so
load = app_queue.so
load = app_echo.so
load = app_while.so
load = app_read.so

; Bridging

load = bridge_builtin_features.so
load = bridge_builtin_interval_features.so
load = bridge_holding.so
load = bridge_native_rtp.so
load = bridge_simple.so
load = bridge_softmix.so

; Call Detail Records

load = cdr_custom.so

; Channel Drivers

load = chan_bridge_media.so
load = chan_pjsip.so

; Codecs

load = codec_gsm.so
load = codec_resample.so
load = codec_ulaw.so
load = codec_g722.so

; Formats

load = format_gsm.so
load = format_pcm.so
load = format_wav_gsm.so
load = format_wav.so

; Functions

load = func_callerid.so
load = func_cdr.so
load = func_pjsip_endpoint.so
load = func_sorcery.so
load = func_devstate.so
load = func_strings.so
load = func_cut.so
load = func_rand.so
load = func_shell.so
load = func_env.so

; Core/PBX

load = pbx_config.so

; Resources

load = res_http_websocket.so
load = res_crypto.so
load = res_musiconhold.so
load = res_pjproject.so
load = res_pjsip_acl.so
load = res_pjsip_authenticator_digest.so
load = res_pjsip_caller_id.so
load = res_pjsip_dialog_info_body_generator.so
load = res_pjsip_diversion.so
load = res_pjsip_dtmf_info.so
load = res_pjsip_endpoint_identifier_anonymous.so
load = res_pjsip_endpoint_identifier_ip.so
load = res_pjsip_endpoint_identifier_user.so
load = res_pjsip_exten_state.so
load = res_pjsip_header_funcs.so
load = res_pjsip_logger.so
load = res_pjsip_messaging.so
load = res_pjsip_mwi_body_generator.so
load = res_pjsip_mwi.so
load = res_pjsip_nat.so
load = res_pjsip_notify.so
load = res_pjsip_one_touch_record_info.so
load = res_pjsip_outbound_authenticator_digest.so
load = res_pjsip_outbound_publish.so
load = res_pjsip_outbound_registration.so
load = res_pjsip_path.so
load = res_pjsip_pidf_body_generator.so
load = res_pjsip_pidf_digium_body_supplement.so
load = res_pjsip_pidf_eyebeam_body_supplement.so
load = res_pjsip_publish_asterisk.so
load = res_pjsip_pubsub.so
load = res_pjsip_refer.so
load = res_pjsip_registrar.so
load = res_pjsip_rfc3326.so
load = res_pjsip_sdp_rtp.so
load = res_pjsip_send_to_voicemail.so
load = res_pjsip_session.so
load = res_pjsip.so
load = res_pjsip_t38.so
load = res_pjsip_transport_websocket.so
load = res_pjsip_xpidf_body_generator.so
load = res_rtp_asterisk.so
load = res_sorcery_astdb.so
load = res_sorcery_config.so
load = res_sorcery_memory.so
load = res_sorcery_realtime.so
load = res_timing_timerfd.so
load = res_pjsip_transport_websocket.so
load = res_http_websocket.so
load = res_srtp.so

; Do not load res_hep and kin unless you are using HEP monitoring
; <http://sipcapture.org> in your network.

noload = res_hep.so
noload = res_hep_pjsip.so
noload = res_hep_rtcp.so",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/pjsip.conf": {
                "content": "[udp]
type=transport
protocol=udp
bind=0.0.0.0
external_media_address=PUBLIC_IP
external_signaling_address=PUBLIC_IP
allow_reload=yes

[ws]
type=transport
protocol=ws
bind=0.0.0.0
external_media_address=PUBLIC_IP
external_signaling_address=PUBLIC_IP
allow_reload=yes

[PSTNVoiceConnector]
type=endpoint
context=from-voiceConnector
transport=udp
disallow=all
allow=ulaw
aors=PSTNVoiceConnector
direct_media=no
ice_support=yes
force_rport=yes

[PSTNVoiceConnector]
type=identify
endpoint=PSTNVoiceConnector
match=VOICE_CONNECTOR.voiceconnector.chime.aws

[PSTNVoiceConnector]
type=aor
contact=sip:VOICE_CONNECTOR.voiceconnector.chime.aws
qualify_frequency=30

[PHONE_NUMBER]
type=endpoint
aors=PHONE_NUMBER
auth=PHONE_NUMBER
webrtc=yes
context=from-phone
disallow=all
allow=ulaw

[PHONE_NUMBER]
type=auth
auth_type=userpass
username=PHONE_NUMBER
password=STACK_ID

[PHONE_NUMBER]
type=aor
max_contacts=5

",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/rtp.conf": {
                "content": "[general]

stunaddr=stun.kinesisvideo.us-east-1.amazonaws.com:443",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/config.json": {
                "content": {
                  "IP": {
                    "Ref": "VPCResourcesasteriskEipC341F971",
                  },
                  "PHONE_NUMBER": {
                    "Fn::GetAtt": [
                      "voiceResourcesvoiceConnectorPhoneNumberChimePhoneNumberpstnCustomResource3F78630F",
                      "phoneNumber",
                    ],
                  },
                  "REGION": {
                    "Ref": "AWS::Region",
                  },
                  "STACK_ID": "test",
                  "VOICE_CONNECTOR": {
                    "Fn::GetAtt": [
                      "voiceResourcespstnVoiceConnectorvoiceConnectorRequestpstnCustomResource7181BF13",
                      "voiceConnectorId",
                    ],
                  },
                },
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/config_asterisk.sh": {
                "content": "#!/bin/bash -xe

PUBLIC_IP=$( jq -r '.IP' /etc/config.json )
VOICE_CONNECTOR=$( jq -r '.VOICE_CONNECTOR' /etc/config.json )
PHONE_NUMBER=$( jq -r '.PHONE_NUMBER' /etc/config.json )
STACK_ID=$( jq -r '.STACK_ID' /etc/config.json )

/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/tmp/amazon-cloudwatch-agent.json


sed -i "s/PUBLIC_IP/$PUBLIC_IP/g" /etc/asterisk/pjsip.conf
sed -i "s/VOICE_CONNECTOR/\${VOICE_CONNECTOR}/g" /etc/asterisk/pjsip.conf
sed -i "s/PHONE_NUMBER/$PHONE_NUMBER/g" /etc/asterisk/extensions.conf
sed -i "s/PHONE_NUMBER/$PHONE_NUMBER/g" /etc/asterisk/pjsip.conf
sed -i "s/STACK_ID/$STACK_ID/g" /etc/asterisk/pjsip.conf 

echo "VOICE_CONNECTOR: \${VOICE_CONNECTOR}"
echo "PHONE_NUMBER: \${PHONE_NUMBER}"
echo "STACK_ID: \${STACK_ID}"


# aws chime put-voice-connector-origination --voice-connector-id \${VOICE_CONNECTOR} --origination '{"Routes": [{"Host": "'\${PUBLIC_IP}'","Port": 5060,"Protocol": "UDP","Priority": 1,"Weight": 1}],"Disabled": false}'
# aws chime put-voice-connector-termination --voice-connector-id \${VOICE_CONNECTOR} --termination '{"CpsLimit": 1, "CallingRegions": ["US"], "CidrAllowedList": ["'\${PUBLIC_IP}'/32"], "Disabled": false}'


usermod -aG audio,dialout asterisk
chown -R asterisk.asterisk /etc/asterisk
chown -R asterisk.asterisk /var/{lib,log,spool}/asterisk

echo '0 * * * * /sbin/asterisk -rx "core reload"' > /etc/asterisk/crontab.txt 
crontab /etc/asterisk/crontab.txt

systemctl restart asterisk
/sbin/asterisk -rx "core reload"

cd /home/ubuntu/site
chown ubuntu:ubuntu . -R
yarn && yarn run build
systemctl enable nginx
systemctl restart nginx",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/nginx/sites-available/default": {
                "content": "server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.html;

    server_name _;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /healthcheck {
        access_log off;
        return 200;
    }

    location ~* \\.(?:ico|css|js|gif|jpe?g|png)$ {
        expires max;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        try_files $uri =404;
    }
}",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/home/ubuntu/.ssh/authorized_keys": {
                "content": " 
",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/home/ubuntu/site/.env": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "SIP_URI=sip:",
                      {
                        "Fn::GetAtt": [
                          "voiceResourcesvoiceConnectorPhoneNumberChimePhoneNumberpstnCustomResource3F78630F",
                          "phoneNumber",
                        ],
                      },
                      "@",
                      {
                        "Fn::GetAtt": [
                          "DistributionResourcesDistribution80C53434",
                          "DomainName",
                        ],
                      },
                      "
SIP_PASSWORD=test
WEBSOCKET_URL=wss://",
                      {
                        "Fn::GetAtt": [
                          "DistributionResourcesDistribution80C53434",
                          "DomainName",
                        ],
                      },
                      "/ws
VOICE_CONNECTOR_PHONE=",
                      {
                        "Fn::GetAtt": [
                          "voiceResourcesvoiceConnectorPhoneNumberChimePhoneNumberpstnCustomResource3F78630F",
                          "phoneNumber",
                        ],
                      },
                      "
SERVER_IP=",
                      {
                        "Ref": "VPCResourcesasteriskEipC341F971",
                      },
                      "
USER_POOL_REGION=",
                      {
                        "Ref": "AWS::Region",
                      },
                      "
USER_POOL_ID=",
                      {
                        "Ref": "CognitoUserPool279BBD48",
                      },
                      "
WEB_CLIENT_ID=",
                      {
                        "Ref": "CognitoUserPoolClientEF2538C4",
                      },
                      "
IDENTITY_POOL=",
                      {
                        "Ref": "CognitocognitoIdentityPool626065C7",
                      },
                      "
",
                    ],
                  ],
                },
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
            },
          },
          "configSets": {
            "default": [
              "preBuild",
              "packages",
              "logs",
              "cli",
              "downloads",
              "config",
            ],
          },
          "downloads": {
            "commands": {
              "000": {
                "command": "mkdir -p /var/lib/asterisk/sounds/en",
              },
              "001": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "aws s3 cp s3://",
                      {
                        "Ref": "ServerassetBucketD78D47DA",
                      },
                      "/audio/AGENT_Retail40.wav /var/lib/asterisk/sounds/en/AGENT_Retail40.wav",
                    ],
                  ],
                },
              },
              "002": {
                "command": "echo Audio files copied",
              },
              "003": {
                "command": "mkdir -p /home/ubuntu/site",
              },
              "004": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "aws s3 cp s3://",
                      {
                        "Ref": "ServerassetBucketD78D47DA",
                      },
                      "/site /home/ubuntu/site --recursive",
                    ],
                  ],
                },
              },
              "005": {
                "command": "usermod -a -G www-data ubuntu",
              },
              "006": {
                "command": "echo User added to www-data group",
              },
            },
          },
          "logs": {
            "commands": {
              "000": {
                "command": "curl "https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/arm64/latest/amazon-cloudwatch-agent.deb" -o "amazon-cloudwatch-agent.deb"",
              },
              "001": {
                "command": "dpkg -i -E ./amazon-cloudwatch-agent.deb",
              },
              "002": {
                "command": "/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/tmp/amazon-cloudwatch-agent.json",
              },
            },
            "files": {
              "/tmp/amazon-cloudwatch-agent.json": {
                "content": "{
	"agent": {
		"run_as_user": "root"
	},
	"logs": {
		"logs_collected": {
			"files": {
				"collect_list": [
					{
						"file_path": "/var/log/cloud-init-output.log",
						"log_group_name": "/server/log/take-back-and-transfer/",
						"log_stream_name": "{instance_id}-cloud-init-output",
						"retention_in_days": 7
					},
					{
						"file_path": "/var/log/asterisk/messages",
						"log_group_name": "/server/log/take-back-and-transfer/",
						"log_stream_name": "{instance_id}-messages",
						"retention_in_days": 7
					},
					{
						"file_path": "/var/log/cloud-init.log",
						"log_group_name": "/server/log/take-back-and-transfer/",
						"log_stream_name": "{instance_id}-cloud-init",
						"retention_in_days": 7
					}
				]
			}
		}
	}
}",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
            },
          },
          "packages": {
            "packages": {
              "apt": {
                "asterisk": [],
                "jq": [],
                "nginx": [],
                "nodejs": [],
                "unzip": [],
              },
            },
          },
          "preBuild": {
            "commands": {
              "000": {
                "command": "curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -",
              },
            },
          },
        },
      },
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "Encrypted": true,
              "VolumeSize": 30,
            },
          },
        ],
        "IamInstanceProfile": {
          "Ref": "ServerInstanceInstanceProfile5CC6E324",
        },
        "ImageId": {
          "Fn::FindInMap": [
            "ServerInstanceAmiMap3262B564",
            {
              "Ref": "AWS::Region",
            },
            "ami",
          ],
        },
        "InstanceType": "c7g.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Serverec2InstanceSecurityGroupBD9C6329",
              "GroupId",
            ],
          },
          {
            "Fn::GetAtt": [
              "VPCResourcesAsteriskSecurityGroupB50B41CA",
              "GroupId",
            ],
          },
          {
            "Fn::GetAtt": [
              "VPCResourcesSSHSecurityGroupEABB5EC4",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VPCResourcesVPCServerPublicSubnet1SubnetBD1933BB",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Server/Instance",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash
apt-get update
while fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1; do sleep 1 ; done
apt-get install -y python3-pip
mkdir -p /opt/aws/bin
pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
ln -s /root/aws-cfn-bootstrap-latest/init/ubuntu/cfn-hup /etc/init.d/cfn-hup
ln -s /usr/local/bin/cfn-* /opt/aws/bin/
# fingerprint: ca43336a5cbc04fa
(
  set +e
  /opt/aws/bin/cfn-init -v --region ",
                {
                  "Ref": "AWS::Region",
                },
                " --stack ",
                {
                  "Ref": "AWS::StackName",
                },
                " --resource ServerInstanceE518391B87a217eae52e3c5b --url https://cloudformation.",
                {
                  "Ref": "AWS::Region",
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                " --role ",
                {
                  "Ref": "ServerserverEc2RoleAA905608",
                },
                " -c default
  /opt/aws/bin/cfn-signal -e $? --region ",
                {
                  "Ref": "AWS::Region",
                },
                " --stack ",
                {
                  "Ref": "AWS::StackName",
                },
                " --resource ServerInstanceE518391B87a217eae52e3c5b --url https://cloudformation.",
                {
                  "Ref": "AWS::Region",
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                " --role ",
                {
                  "Ref": "ServerserverEc2RoleAA905608",
                },
                "
  cat /var/log/cfn-init.log >&2
)",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "ServerInstanceInstanceProfile5CC6E324": {
      "Properties": {
        "Roles": [
          {
            "Ref": "ServerserverEc2RoleAA905608",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "ServerassetBucketAutoDeleteObjectsCustomResource29A63753": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ServerassetBucketPolicy47077601",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "ServerassetBucketD78D47DA",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "ServerassetBucketD78D47DA": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:dc719ac0",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ServerassetBucketDeploymentAwsCliLayer51A9B05F": {
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "ServerassetBucketDeploymentCustomResource512MiB1A3EA04B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketName": {
          "Ref": "ServerassetBucketD78D47DA",
        },
        "Prune": true,
        "RetainOnDelete": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB6723FB92",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": [
          "2b6b126293bd5333d0e28bd32858313f405d02fbe7e93d2ea2b0756c983dd360.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "ServerassetBucketPolicy47077601": {
      "Properties": {
        "Bucket": {
          "Ref": "ServerassetBucketD78D47DA",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ServerassetBucketD78D47DA",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ServerassetBucketD78D47DA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ServerassetBucketD78D47DA",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ServerassetBucketD78D47DA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "Serverec2InstanceSecurityGroupBD9C6329": {
      "Properties": {
        "GroupDescription": "test/Server/ec2InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Serverec2InstanceSecurityGroupfromtestVPCResourcesALBSecurityGroup39AFBACF806EC17640": {
      "Properties": {
        "Description": "allow traffic on port 80 from the ALB security group",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Serverec2InstanceSecurityGroupBD9C6329",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "VPCResourcesALBSecurityGroupBA6016ED",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "Serverec2InstanceSecurityGroupfromtestVPCResourcesALBSecurityGroup39AFBACF808819733729": {
      "Properties": {
        "Description": "allow traffic on port 8088 from the ALB security group",
        "FromPort": 8088,
        "GroupId": {
          "Fn::GetAtt": [
            "Serverec2InstanceSecurityGroupBD9C6329",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "VPCResourcesALBSecurityGroupBA6016ED",
            "GroupId",
          ],
        },
        "ToPort": 8088,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ServerhttpTargetGroup191C0E40": {
      "Properties": {
        "HealthCheckPath": "/healthcheck",
        "HealthCheckPort": "80",
        "HealthCheckProtocol": "HTTP",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "Targets": [
          {
            "Id": {
              "Ref": "ServerInstanceE518391B87a217eae52e3c5b",
            },
          },
        ],
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ServerserverEc2RoleAA905608": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerserverEc2RoleDefaultPolicy2995B49A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ServerassetBucketD78D47DA",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ServerassetBucketD78D47DA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "cloudformation:DescribeStackResource",
                "cloudformation:SignalResource",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AWS::StackId",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServerserverEc2RoleDefaultPolicy2995B49A",
        "Roles": [
          {
            "Ref": "ServerserverEc2RoleAA905608",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerwebSocketTargetGroupDDE7CDC6": {
      "Properties": {
        "HealthCheckPath": "/httpstatus",
        "HealthCheckPort": "8088",
        "HealthCheckProtocol": "HTTP",
        "Port": 8088,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "Targets": [
          {
            "Id": {
              "Ref": "ServerInstanceE518391B87a217eae52e3c5b",
            },
          },
        ],
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "VPCResourcesALBSecurityGroupBA6016ED": {
      "Properties": {
        "GroupDescription": "Security Group for ALB",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 8088",
            "FromPort": 8088,
            "IpProtocol": "tcp",
            "ToPort": 8088,
          },
        ],
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VPCResourcesApplicationLoadBalancer8B897D2E": {
      "DependsOn": [
        "VPCResourcesVPCServerPublicSubnet1DefaultRoute5FFEFA2B",
        "VPCResourcesVPCServerPublicSubnet1RouteTableAssociation739BF4B9",
        "VPCResourcesVPCServerPublicSubnet2DefaultRoute3DFFC6FB",
        "VPCResourcesVPCServerPublicSubnet2RouteTableAssociation98A1D7C3",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "VPCResourcesALBSecurityGroupBA6016ED",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VPCResourcesVPCServerPublicSubnet1SubnetBD1933BB",
          },
          {
            "Ref": "VPCResourcesVPCServerPublicSubnet2Subnet87CFAE90",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "VPCResourcesApplicationLoadBalancerhttpListener5F903A35": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ServerhttpTargetGroup191C0E40",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "VPCResourcesApplicationLoadBalancer8B897D2E",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "VPCResourcesApplicationLoadBalancerwebSocketListener75D50C71": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ServerwebSocketTargetGroupDDE7CDC6",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "VPCResourcesApplicationLoadBalancer8B897D2E",
        },
        "Port": 8088,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "VPCResourcesAsteriskSecurityGroupB50B41CA": {
      "Properties": {
        "GroupDescription": "Security Group for Asterisk Instance",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "3.80.16.0/23",
            "Description": "Allow Chime Voice Connector Signaling Access",
            "FromPort": 5060,
            "IpProtocol": "udp",
            "ToPort": 5060,
          },
          {
            "CidrIp": "3.80.16.0/23",
            "Description": "Allow Chime Voice Connector Signaling Access",
            "FromPort": 5060,
            "IpProtocol": "tcp",
            "ToPort": 5061,
          },
          {
            "CidrIp": "99.77.253.0/24",
            "Description": "Allow Chime Voice Connector Signaling Access",
            "FromPort": 5060,
            "IpProtocol": "udp",
            "ToPort": 5060,
          },
          {
            "CidrIp": "99.77.253.0/24",
            "Description": "Allow Chime Voice Connector Signaling Access",
            "FromPort": 5060,
            "IpProtocol": "tcp",
            "ToPort": 5061,
          },
          {
            "CidrIp": "99.77.253.0/24",
            "Description": "Allow Chime Voice Connector Signaling Access",
            "FromPort": 5000,
            "IpProtocol": "udp",
            "ToPort": 65000,
          },
          {
            "CidrIp": "3.80.16.0/23",
            "Description": "Allow Chime Voice Connector Media Access",
            "FromPort": 5000,
            "IpProtocol": "udp",
            "ToPort": 65000,
          },
          {
            "CidrIp": "52.55.62.128/25",
            "Description": "Allow Chime Voice Connector Media Access",
            "FromPort": 1024,
            "IpProtocol": "udp",
            "ToPort": 65535,
          },
          {
            "CidrIp": "52.55.63.0/25",
            "Description": "Allow Chime Voice Connector Media Access",
            "FromPort": 1024,
            "IpProtocol": "udp",
            "ToPort": 65535,
          },
          {
            "CidrIp": "34.212.95.128/25",
            "Description": "Allow Chime Voice Connector Media Access",
            "FromPort": 1024,
            "IpProtocol": "udp",
            "ToPort": 65535,
          },
          {
            "CidrIp": "34.223.21.0/25",
            "Description": "Allow Chime Voice Connector Media Access",
            "FromPort": 1024,
            "IpProtocol": "udp",
            "ToPort": 65535,
          },
        ],
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VPCResourcesSSHSecurityGroupEABB5EC4": {
      "Properties": {
        "GroupDescription": "Security Group for SSH",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:22",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
        ],
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VPCResourcesVPC89517325": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPCResources/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCResourcesVPCIGW0870CE93": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPCResources/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCResourcesVPCServerPublicSubnet1DefaultRoute5FFEFA2B": {
      "DependsOn": [
        "VPCResourcesVPCVPCGW8CE4D94B",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCResourcesVPCIGW0870CE93",
        },
        "RouteTableId": {
          "Ref": "VPCResourcesVPCServerPublicSubnet1RouteTableF876F433",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCResourcesVPCServerPublicSubnet1RouteTableAssociation739BF4B9": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCResourcesVPCServerPublicSubnet1RouteTableF876F433",
        },
        "SubnetId": {
          "Ref": "VPCResourcesVPCServerPublicSubnet1SubnetBD1933BB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCResourcesVPCServerPublicSubnet1RouteTableF876F433": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPCResources/VPC/ServerPublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCResourcesVPCServerPublicSubnet1SubnetBD1933BB": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ServerPublic",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/VPCResources/VPC/ServerPublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCResourcesVPCServerPublicSubnet2DefaultRoute3DFFC6FB": {
      "DependsOn": [
        "VPCResourcesVPCVPCGW8CE4D94B",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCResourcesVPCIGW0870CE93",
        },
        "RouteTableId": {
          "Ref": "VPCResourcesVPCServerPublicSubnet2RouteTable4049D21F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCResourcesVPCServerPublicSubnet2RouteTable4049D21F": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPCResources/VPC/ServerPublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCResourcesVPCServerPublicSubnet2RouteTableAssociation98A1D7C3": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCResourcesVPCServerPublicSubnet2RouteTable4049D21F",
        },
        "SubnetId": {
          "Ref": "VPCResourcesVPCServerPublicSubnet2Subnet87CFAE90",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCResourcesVPCServerPublicSubnet2Subnet87CFAE90": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ServerPublic",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/VPCResources/VPC/ServerPublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCResourcesVPCVPCGW8CE4D94B": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VPCResourcesVPCIGW0870CE93",
        },
        "VpcId": {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VPCResourcesasteriskEipC341F971": {
      "Type": "AWS::EC2::EIP",
    },
    "newConnectNumbersconnectPhoneNumber098AC4A61": {
      "Properties": {
        "CountryCode": "US",
        "TargetArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:connect:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":instance/",
              {
                "Fn::GetAtt": [
                  "ConnectInstanceResourcesInstance5B0E277B",
                  "Id",
                ],
              },
            ],
          ],
        },
        "Type": "DID",
      },
      "Type": "AWS::Connect::PhoneNumber",
    },
    "newConnectNumbersconnectPhoneNumber1CA4337F4": {
      "Properties": {
        "CountryCode": "US",
        "TargetArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:connect:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":instance/",
              {
                "Fn::GetAtt": [
                  "ConnectInstanceResourcesInstance5B0E277B",
                  "Id",
                ],
              },
            ],
          ],
        },
        "Type": "DID",
      },
      "Type": "AWS::Connect::PhoneNumber",
    },
    "newConnectNumbersconnectPhoneNumber23831CF9C": {
      "Properties": {
        "CountryCode": "US",
        "TargetArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:connect:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":instance/",
              {
                "Fn::GetAtt": [
                  "ConnectInstanceResourcesInstance5B0E277B",
                  "Id",
                ],
              },
            ],
          ],
        },
        "Type": "DID",
      },
      "Type": "AWS::Connect::PhoneNumber",
    },
    "voiceResourcespstnVoiceConnectorvoiceConnectorRequestpstnCustomResource7181BF13": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": {
          "encryption": false,
          "logging": {
            "enableMediaMetricLogs": true,
            "enableSIPLogs": true,
          },
          "name": "testvoiceResourcespstnVoiceConnectorC750A551",
          "origination": [
            {
              "host": {
                "Ref": "VPCResourcesasteriskEipC341F971",
              },
              "port": 5060,
              "priority": 1,
              "protocol": "UDP",
              "weight": 1,
            },
          ],
          "region": {
            "Ref": "AWS::Region",
          },
          "termination": {
            "callingRegions": [
              "US",
            ],
            "terminationCidrs": [
              {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "VPCResourcesasteriskEipC341F971",
                    },
                    "/32",
                  ],
                ],
              },
            ],
          },
        },
        "resourceType": "VoiceConnector",
        "uid": "testvoiceResourcespstnVoiceConnectorC750A551",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "voiceResourcessipMediaAppsipMediaAppRequestpstnCustomResourceA2CEE1C9": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": {
          "endpoint": {
            "Fn::GetAtt": [
              "voiceResourcessmaHandler8469CA96",
              "Arn",
            ],
          },
          "name": "testvoiceResourcessipMediaApp322C9A31",
          "region": {
            "Ref": "AWS::Region",
          },
        },
        "resourceType": "SMA",
        "uid": "testvoiceResourcessipMediaApp322C9A31",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "voiceResourcessipRulesipRuleRequestpstnCustomResource5C37053D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": {
          "name": "testvoiceResourcessipRuleE058D6D9",
          "targetApplications": [
            {
              "priority": 1,
              "region": {
                "Ref": "AWS::Region",
              },
              "sipMediaApplicationId": {
                "Fn::GetAtt": [
                  "voiceResourcessipMediaAppsipMediaAppRequestpstnCustomResourceA2CEE1C9",
                  "sipMediaAppId",
                ],
              },
            },
          ],
          "triggerType": "ToPhoneNumber",
          "triggerValue": {
            "Fn::GetAtt": [
              "voiceResourcessmaPSTNPhoneNumberChimePhoneNumberpstnCustomResource7CF83AAB",
              "phoneNumber",
            ],
          },
        },
        "resourceType": "SMARule",
        "uid": "testvoiceResourcessipRuleE058D6D9",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "voiceResourcessmaHandler8469CA96": {
      "DependsOn": [
        "voiceResourcessmaHandlerRoleDefaultPolicy1DBB54A3",
        "voiceResourcessmaHandlerRole4C5632AA",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d86bf01946ca375c90f003817d917b58fcec2b897c68f9e2b442af71605940d4.zip",
        },
        "Environment": {
          "Variables": {
            "INTEGRATION_TABLE": {
              "Ref": "DatabaseResourcesintegrationTableAB8F2C7D",
            },
            "LOG_LEVEL": "INFO",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "voiceResourcessmaHandlerRole4C5632AA",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "voiceResourcessmaHandlerLogRetention01A9B963": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "voiceResourcessmaHandler8469CA96",
              },
            ],
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "voiceResourcessmaHandlerRole4C5632AA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "voiceResourcessmaHandlerRoleDefaultPolicy1DBB54A3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseResourcesintegrationTableAB8F2C7D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseResourcesintegrationTableAB8F2C7D",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "voiceResourcessmaHandlerRoleDefaultPolicy1DBB54A3",
        "Roles": [
          {
            "Ref": "voiceResourcessmaHandlerRole4C5632AA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "voiceResourcessmaPSTNPhoneNumberChimePhoneNumberpstnCustomResource7CF83AAB": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "voiceResourcesvoiceConnectorPhoneNumberChimePhoneNumberpstnCustomResource3F78630F",
        "voiceResourcesvoiceConnectorPhoneNumberphoneAssociationpstnCustomResource9A9AB380",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": {
          "phoneCountry": "US",
          "phoneNumberTollFreePrefix": 855,
          "phoneNumberType": "TollFree",
          "phoneProductType": "SipMediaApplicationDialIn",
        },
        "resourceType": "PhoneNumber",
        "uid": "testvoiceResourcessmaPSTNPhoneNumberC0B3DB32",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "voiceResourcessmaPhoneNumber0ChimePhoneNumberpstnCustomResourceE4F69902": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "voiceResourcesvoiceConnectorPhoneNumberChimePhoneNumberpstnCustomResource3F78630F",
        "voiceResourcesvoiceConnectorPhoneNumberphoneAssociationpstnCustomResource9A9AB380",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": {
          "phoneCountry": "US",
          "phoneNumberTollFreePrefix": 855,
          "phoneNumberType": "TollFree",
          "phoneProductType": "SipMediaApplicationDialIn",
        },
        "resourceType": "PhoneNumber",
        "uid": "testvoiceResourcessmaPhoneNumber092D17639",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "voiceResourcessmaPhoneNumber1ChimePhoneNumberpstnCustomResource78D9DEE1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "voiceResourcesvoiceConnectorPhoneNumberChimePhoneNumberpstnCustomResource3F78630F",
        "voiceResourcesvoiceConnectorPhoneNumberphoneAssociationpstnCustomResource9A9AB380",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": {
          "phoneCountry": "US",
          "phoneNumberTollFreePrefix": 855,
          "phoneNumberType": "TollFree",
          "phoneProductType": "SipMediaApplicationDialIn",
        },
        "resourceType": "PhoneNumber",
        "uid": "testvoiceResourcessmaPhoneNumber155BA8714",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "voiceResourcessmaPhoneNumber2ChimePhoneNumberpstnCustomResourceBAF8216C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "voiceResourcesvoiceConnectorPhoneNumberChimePhoneNumberpstnCustomResource3F78630F",
        "voiceResourcesvoiceConnectorPhoneNumberphoneAssociationpstnCustomResource9A9AB380",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": {
          "phoneCountry": "US",
          "phoneNumberTollFreePrefix": 855,
          "phoneNumberType": "TollFree",
          "phoneProductType": "SipMediaApplicationDialIn",
        },
        "resourceType": "PhoneNumber",
        "uid": "testvoiceResourcessmaPhoneNumber23EF35120",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "voiceResourcesvoiceConnectorPhoneNumberChimePhoneNumberpstnCustomResource3F78630F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": {
          "phoneCountry": "US",
          "phoneNumberTollFreePrefix": 855,
          "phoneNumberType": "TollFree",
          "phoneProductType": "VoiceConnector",
        },
        "resourceType": "PhoneNumber",
        "uid": "testvoiceResourcesvoiceConnectorPhoneNumberD075AE50",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "voiceResourcesvoiceConnectorPhoneNumberphoneAssociationpstnCustomResource9A9AB380": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": {
          "e164PhoneNumber": {
            "Fn::GetAtt": [
              "voiceResourcesvoiceConnectorPhoneNumberChimePhoneNumberpstnCustomResource3F78630F",
              "phoneNumber",
            ],
          },
          "voiceConnectorId": {
            "Fn::GetAtt": [
              "voiceResourcespstnVoiceConnectorvoiceConnectorRequestpstnCustomResource7181BF13",
              "voiceConnectorId",
            ],
          },
        },
        "resourceType": "PhoneAssociation",
        "uid": "testvoiceResourcesvoiceConnectorPhoneNumberD075AE50",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
